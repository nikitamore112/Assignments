Person class implements Serializable with
	private String name
	private int age

		getters and setters
		parameterized constructor

Student extends Person
	private int rollno
		getter and setters
		parameterized constructor accepting name,age and rollno
			pass name and age to the super constructor


Demo class with main
	create one object of Student, write it inside file and then read.


import java.io.*;

class Person implements Serializable
{
	 private String name;
	private int age;
	Person(String name,int age)
	{
		System.out.println("Name"+" "+name);
		System.out.println("Age"+" "+age);
		
	}
	public void setName(String Name)
	{
		this.name=name;
	}
	public String getName()
	{
		return name;
	}
	public void setAge(int age)
	{
		this.age=age;
	}
	public int getAge()
	{
		return age;
	}

}
class Student extends Person
{
	Student(String name,int age,int rollno)
	{
		super(name,age);
		this.rollno=rollno;
		System.out.println("Roll no"+" "+rollno);
	}
	

	private int rollno;
	public void setrollno(int rollno)
	{
		this.rollno=rollno;
	}
	public int getrollno()
	{
		return rollno;
	}
	}
public class Demo 
{

	public static void main(String[] args) 
	{
		Student s=new Student("abc",15,40);
		try(FileOutputStream fos=new FileOutputStream("c:\\temp\\std.txt"))
		{
			try(ObjectOutputStream oos=new ObjectOutputStream(fos))
			{
				oos.writeObject(s);
			}
			
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
		try(FileInputStream fis=new FileInputStream("c:\\temp\\std.txt"))
		{
			try(ObjectInputStream oos=new ObjectInputStream(fis))
			{
				oos.readObject();
			}
		}
		catch(Exception ee)
		{
			ee.printStackTrace();
		}
	}
}

